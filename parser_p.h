// This file was generated by qlalr - DO NOT EDIT!
#ifndef PARSER_P_H
#define PARSER_P_H

class Parser
{
public:
    enum VariousConstants {
        EOF_SYMBOL = 0,
        EAST = 5,
        EAT = 1,
        EXAMINE = 2,
        GO = 3,
        IN = 9,
        NORTH = 4,
        OBJECTNAME = 11,
        PUT = 8,
        SOUTH = 6,
        THE = 10,
        WEST = 7,

        ACCEPT_STATE = 16,
        RULE_COUNT = 23,
        STATE_COUNT = 32,
        TERMINAL_COUNT = 12,
        NON_TERMINAL_COUNT = 12,

        GOTO_INDEX_OFFSET = 32,
        GOTO_INFO_OFFSET = 31,
        GOTO_CHECK_OFFSET = 31
    };

    static const char *const     spell[];
    static const short             lhs[];
    static const short             rhs[];
    static const short    goto_default[];
    static const short  action_default[];
    static const short    action_index[];
    static const short     action_info[];
    static const short    action_check[];

    static inline int nt_action (int state, int nt)
    {
        const int yyn = action_index [GOTO_INDEX_OFFSET + state] + nt;
        if (yyn < 0 || action_check [GOTO_CHECK_OFFSET + yyn] != nt)
            return goto_default [nt];

        return action_info [GOTO_INFO_OFFSET + yyn];
    }

    static inline int t_action (int state, int token)
    {
        const int yyn = action_index [state] + token;

        if (yyn < 0 || action_check [yyn] != token)
            return - action_default [state];

        return action_info [yyn];
    }
};


#endif // PARSER_P_H

